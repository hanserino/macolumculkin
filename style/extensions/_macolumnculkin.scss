/*  =====================================================================================
	McColumn Culkin - Simple grid system
=========================================================================================  */
$defaultGutterWidth: 2%;
$maxColumns: 10;

[data-columns]{
	width: 100%;
	display: block;

	.column{
		@include inline-block;
		vertical-align: top;
		margin-right: -4px;
		margin-top: units(2);
		border: 1px solid $swatch2;

		@include device-size(small){
			margin-top: units(1);
		}

		>div{
			display: block;
			border: 1px solid $swatch2;
		}

		[data-columns]{
			@include inline-block;
			vertical-align: top;
		}
	}
}

$columns: $maxColumns;
@while $columns > 0 {
	[data-columns="#{$columns}"],
	[data-device-size="small"] [data-mobile-columns="#{$columns}"]{
		> .column{
			width: percentage(1/$columns);
			padding: 0 ($defaultGutterWidth/2);
			&:nth-child(#{$columns}n+1){
				padding-left: 0px;
			}
			&:nth-child(#{$columns}n+#{$columns}){
				padding-right: 0px;
			}
		}

		//Nested columns need half the gutter width
		//TODO: Get rid of this loop
		$columns2: $maxColumns;
		@while $columns2 > 0 {
			[data-columns="#{$columns2}"],
			[data-device-size="small"] [data-mobile-columns="#{$columns2}"]{
				> .column{
					width: percentage(1/$columns2);
					padding: 0 ($defaultGutterWidth/4);
					&:nth-child(#{$columns2}n+1){
						padding-left: 0px;
					}
					&:nth-child(#{$columns2}n+#{$columns2}){
						padding-right: 0px;
					}
				}
			}
			$columns2: $columns2 - 1;
		}
	}
	$columns: $columns - 1;
}
